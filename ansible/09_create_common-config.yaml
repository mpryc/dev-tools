---
- hosts: localhost
  vars_files: vars/default.yaml
  roles:
  - oc_local

  tasks:
  - set_fact:
      common_conf_dir: "{{ working_dir }}/common-conf"

  - debug:
      msg: "yamls will be written to {{ common_conf_dir }} locally"

  - name: check if common-config configmap already exist
    shell: |
      set -e
      oc get configmap -n openstack | grep common-config
    register: common_config_exist
    environment:
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"
    ignore_errors: true

  - name: delete common-config configmap (reinstall/rerun)
    command: oc delete configmap common-config -n openstack
    environment:
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"
    when: common_config_exist.rc == 0

  - name: create common-config configmap
    block:
    - name: Create common-conf
      file:
        path: "{{ common_conf_dir }}"
        state: directory
        mode: '0755'

    - name: create KeystoneAPI
      shell: |
        set -e
        echo -n 'http://keystone.openstack.svc:5000/' > {{ common_conf_dir }}/keystoneAPI

    - name: create GlanceAPI
      shell: |
        set -e
        echo -n 'http://glanceapi.openstack.svc:9292/' > {{ common_conf_dir }}/glanceAPI

    - name: create memcacheServers
      shell: |
        set -e
        echo -n '' > {{ common_conf_dir }}/memcacheServers

    - name: create hosts
      shell: |
        set -e
        printf '# BEGIN ANSIBLE MANAGED BLOCK\n# END ANSIBLE MANAGED BLOCK' > {{ common_conf_dir }}/hosts

    - name: create config map
      command: "oc create configmap common-config --from-file={{ common_conf_dir }}/ -n openstack"
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"

  - name: create service secret
    block:
    - set_fact:
        osp_worker_yaml_dir: "{{ working_yamls_dir }}/osp-worker"

    - debug:
        msg: "yamls will be written to {{ osp_worker_yaml_dir }} locally"

    - name: Create yaml dir
      file:
        path: "{{ osp_worker_yaml_dir }}"
        state: directory

    - name: delete osp-secrets secret (reinstall/rerun)
      command: oc delete secret osp-secrets -n openstack
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"
      ignore_errors: true

    - set_fact:
        transport_url: "{{ 'amqp://cell1:passw0rd@amq-interconnect.openstack.svc:5672/cell1' | b64encode }}"
        cinder_password: "{{ 'foobar123' | b64encode }}"
        nova_password: "{{ 'foobar123' | b64encode }}"
        neutron_password: "{{ 'foobar123' | b64encode }}"
        placement_password: "{{ 'foobar123' | b64encode }}"

    - name: create osp-secret.yaml secret from template
      template:
        src:  osp-secrets.yaml.j2
        dest: "{{ osp_worker_yaml_dir }}/osp-secrets.yaml"

  - name: create service secret
    block:
    - name: copy openstackclient-cm.yaml to {{ osp_worker_yaml_dir }}
      copy:
        src: files/ocp/openstackclient-cm.yaml
        dest: "{{ osp_worker_yaml_dir }}/openstackclient-cm.yaml"

    - name: create openstackclient configMap
      shell: |
        set -e
        oc apply -f {{ osp_worker_yaml_dir }}/openstackclient-cm.yaml
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"

    - name: copy openstackclient-admin-secret.yaml to {{ osp_worker_yaml_dir }}
      copy:
        src: files/ocp/openstackclient-admin-secret.yaml
        dest: "{{ osp_worker_yaml_dir }}/openstackclient-admin-secret.yaml"

    - name: create openstackclient admin user secret
      shell: |
        set -e
        oc apply -f {{ osp_worker_yaml_dir }}/openstackclient-admin-secret.yaml
      environment:
        PATH: "{{ oc_env_path }}"
        KUBECONFIG: "{{ kubeconfig }}"

  - name: apply yamls from {{ osp_worker_yaml_dir }}
    shell: |
      set -e
      oc apply -f {{ osp_worker_yaml_dir }}/
    environment:
      PATH: "{{ oc_env_path }}"
      KUBECONFIG: "{{ kubeconfig }}"
